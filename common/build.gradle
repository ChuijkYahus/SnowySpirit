architectury {
    common(enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
}

dependencies {

    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    if (isMyPc) {
        modImplementation("net.mehvahdjukaar:moonlight:${moonlight_version}")
    } else {
        modImplementation("curse.maven:selene-499980:5882410")
    }

    modCompileOnly("curse.maven:farmers-delight-398521:5772720")

    modImplementation("net.mehvahdjukaar:supplementaries:${project.supplementaries_version}")


}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.mod_id
            from components.java
        }
    }

    repositories {
        // Add repositories to publish to here.
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.compilerArgs.add("-Acrafttweaker.processor.document.output_directory=${new File(rootProject.buildDir, "docsOut")}")
    it.options.compilerArgs.add("-Acrafttweaker.processor.document.multi_source=true")

    it.options.compilerArgs << "-Xmaxerrs" << "4000"

}